/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/editor/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Return the current editor snapshot. */
        get: operations["editor_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/library/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Return the available context sections for the local library. */
        get: operations["library_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ContextItem: {
            id: string;
            type: components["schemas"]["TypeEnum"];
            name?: string;
            role?: string;
            summary?: string;
            title?: string;
            description?: string;
            facts?: string;
            tokens?: number;
            checked?: boolean;
            disabled?: boolean;
        };
        ContextSection: {
            id: string;
            title: string;
            defaultOpen?: boolean;
            items: components["schemas"]["ContextItem"][];
        };
        EditorState: {
            content: string;
            tokens: number;
            cursor?: number | null;
        };
        LibraryResponse: {
            sections: components["schemas"]["ContextSection"][];
        };
        /**
         * @description * `character` - character
         *     * `world` - world
         *     * `styleTone` - styleTone
         *     * `chapter` - chapter
         * @enum {string}
         */
        TypeEnum: "character" | "world" | "styleTone" | "chapter";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    editor_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditorState"];
                };
            };
        };
    };
    library_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LibraryResponse"];
                };
            };
        };
    };
}
