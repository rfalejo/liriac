openapi: 3.0.3
info:
  title: Liriac Local API
  version: 0.1.0
  description: Local Django API serving library context and editor data for the Liriac
    editor.
paths:
  /api/editor/:
    get:
      operationId: editor_retrieve
      description: Return the current editor snapshot.
      tags:
      - editor
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditorState'
          description: ''
  /api/library/:
    get:
      operationId: library_retrieve
      description: Return the available context sections for the local library.
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
  /api/library/books/:
    get:
      operationId: library_books_retrieve
      description: Return the list of books and chapter summaries.
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryBooksResponse'
          description: ''
  /api/library/chapters/{chapter_id}/:
    get:
      operationId: library_chapters_retrieve
      description: Return the full content for a single chapter.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterDetail'
          description: ''
components:
  schemas:
    ChapterBlock:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ChapterBlockTypeEnum'
        position:
          type: integer
        text:
          type: string
        style:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        turns:
          type: array
          items:
            $ref: '#/components/schemas/DialogueTurn'
        context:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        timestamp:
          type: string
          nullable: true
        mood:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        subtitle:
          type: string
          nullable: true
        ordinal:
          type: integer
          nullable: true
        epigraph:
          type: string
          nullable: true
        epigraphAttribution:
          type: string
          nullable: true
        povCharacterId:
          type: string
          nullable: true
        povCharacterName:
          type: string
          nullable: true
        timelineMarker:
          type: string
          nullable: true
        themeTags:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        lastUpdated:
          type: string
          nullable: true
      required:
      - id
      - position
      - type
    ChapterBlockTypeEnum:
      enum:
      - paragraph
      - dialogue
      - scene_boundary
      - metadata
      type: string
      description: |-
        * `paragraph` - paragraph
        * `dialogue` - dialogue
        * `scene_boundary` - scene_boundary
        * `metadata` - metadata
    ChapterDetail:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
        tokens:
          type: integer
          nullable: true
        wordCount:
          type: integer
          nullable: true
        content:
          type: string
        paragraphs:
          type: array
          items:
            type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ChapterBlock'
        bookId:
          type: string
          nullable: true
        bookTitle:
          type: string
          nullable: true
      required:
      - blocks
      - content
      - id
      - ordinal
      - paragraphs
      - title
    ChapterSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
        tokens:
          type: integer
          nullable: true
        wordCount:
          type: integer
          nullable: true
      required:
      - id
      - ordinal
      - title
    ContextItem:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ContextItemTypeEnum'
        name:
          type: string
        role:
          type: string
        summary:
          type: string
        title:
          type: string
        description:
          type: string
        facts:
          type: string
        tokens:
          type: integer
        checked:
          type: boolean
        disabled:
          type: boolean
      required:
      - id
      - type
    ContextItemTypeEnum:
      enum:
      - character
      - world
      - styleTone
      - chapter
      type: string
      description: |-
        * `character` - character
        * `world` - world
        * `styleTone` - styleTone
        * `chapter` - chapter
    ContextSection:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        defaultOpen:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContextItem'
      required:
      - id
      - items
      - title
    DialogueTurn:
      type: object
      properties:
        speakerId:
          type: string
          nullable: true
        speakerName:
          type: string
          nullable: true
        utterance:
          type: string
        stageDirection:
          type: string
          nullable: true
        tone:
          type: string
          nullable: true
      required:
      - utterance
    EditorState:
      type: object
      properties:
        content:
          type: string
        paragraphs:
          type: array
          items:
            type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ChapterBlock'
        tokens:
          type: integer
        cursor:
          type: integer
          nullable: true
        bookId:
          type: string
          nullable: true
        bookTitle:
          type: string
          nullable: true
        chapterId:
          type: string
          nullable: true
        chapterTitle:
          type: string
          nullable: true
      required:
      - blocks
      - content
      - paragraphs
      - tokens
    LibraryBook:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
          nullable: true
        synopsis:
          type: string
          nullable: true
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/ChapterSummary'
      required:
      - chapters
      - id
      - title
    LibraryBooksResponse:
      type: object
      properties:
        books:
          type: array
          items:
            $ref: '#/components/schemas/LibraryBook'
      required:
      - books
    LibraryResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ContextSection'
      required:
      - sections
