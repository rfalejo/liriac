openapi: 3.0.3
info:
  title: Liriac Local API
  version: 0.1.0
  description: Local Django API serving library context and editor data for the Liriac
    editor.
paths:
  /api/editor/:
    get:
      operationId: editor_retrieve
      description: Return the current editor snapshot.
      tags:
      - editor
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditorState'
          description: ''
  /api/library/block-conversions/{conversion_id}/apply/:
    post:
      operationId: library_block_conversions_apply_create
      description: Apply a stored block conversion suggestion to a chapter.
      parameters:
      - in: path
        name: conversion_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockConversionApply'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterDetail'
          description: ''
  /api/library/books/:
    get:
      operationId: library_books_retrieve
      description: Return the list of books and chapter summaries.
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryBooksResponse'
          description: ''
    post:
      operationId: library_books_create
      description: Return the list of books and chapter summaries.
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryBook'
          description: ''
  /api/library/books/{book_id}/:
    patch:
      operationId: library_books_partial_update
      description: Update metadata for a single book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookUpsert'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryBook'
          description: ''
    delete:
      operationId: library_books_destroy
      description: Update metadata for a single book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '204':
          description: No response body
  /api/library/books/{book_id}/chapters/:
    post:
      operationId: library_books_chapters_create
      description: Manage chapters belonging to a single book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterSummary'
          description: ''
  /api/library/books/{book_id}/context/:
    get:
      operationId: library_books_context_retrieve
      description: Return the context sections scoped to a specific book (optionally
        a chapter).
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
  /api/library/books/{book_id}/context/items/:
    post:
      operationId: library_books_context_items_create
      description: Update editable fields for context items belonging to a book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextItemCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
    patch:
      operationId: library_books_context_items_partial_update
      description: Update editable fields for context items belonging to a book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContextItemsUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
  /api/library/books/{book_id}/context/items/{section_slug}/{item_id}/:
    delete:
      operationId: library_books_context_items_destroy
      description: Delete a single context item belonging to a book.
      parameters:
      - in: path
        name: book_id
        schema:
          type: string
        required: true
      - in: path
        name: item_id
        schema:
          type: string
        required: true
      - in: path
        name: section_slug
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '204':
          description: No response body
  /api/library/chapters/{chapter_id}/:
    get:
      operationId: library_chapters_retrieve
      description: Return the full content for a single chapter.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterDetail'
          description: ''
    patch:
      operationId: library_chapters_partial_update
      description: Return the full content for a single chapter.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChapterUpsert'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterSummary'
          description: ''
  /api/library/chapters/{chapter_id}/block-conversions/:
    post:
      operationId: library_chapters_block_conversions_create
      description: Generate a block conversion suggestion using Gemini.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockConversionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockConversionResponse'
          description: ''
  /api/library/chapters/{chapter_id}/blocks/:
    post:
      operationId: library_chapters_blocks_create
      description: Create blocks within a chapter.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterBlockCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterDetail'
          description: ''
  /api/library/chapters/{chapter_id}/blocks/{block_id}/:
    patch:
      operationId: library_chapters_blocks_partial_update
      description: Update a single block within a chapter.
      parameters:
      - in: path
        name: block_id
        schema:
          type: string
        required: true
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChapterBlockUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterDetail'
          description: ''
    delete:
      operationId: library_chapters_blocks_destroy
      description: Update a single block within a chapter.
      parameters:
      - in: path
        name: block_id
        schema:
          type: string
        required: true
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '204':
          description: No response body
  /api/library/chapters/{chapter_id}/blocks/{block_id}/versions/:
    get:
      operationId: library_chapters_blocks_versions_retrieve
      description: List the versions available for a block.
      parameters:
      - in: path
        name: block_id
        schema:
          type: string
        required: true
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterBlockVersionList'
          description: ''
  /api/library/chapters/{chapter_id}/blocks/{block_id}/versions/{version}/:
    delete:
      operationId: library_chapters_blocks_versions_destroy
      description: Delete a specific block version.
      parameters:
      - in: path
        name: block_id
        schema:
          type: string
        required: true
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: integer
        required: true
      tags:
      - library
      responses:
        '204':
          description: No response body
  /api/library/chapters/{chapter_id}/context-visibility/:
    get:
      operationId: library_chapters_context_visibility_retrieve
      description: Return or update the per-chapter visibility of context items.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
    patch:
      operationId: library_chapters_context_visibility_partial_update
      description: Return or update the per-chapter visibility of context items.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChapterContextVisibilityUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryResponse'
          description: ''
  /api/library/chapters/{chapter_id}/general-suggestions/:
    post:
      operationId: library_chapters_general_suggestions_create
      description: Generate block-agnostic filler suggestions for a chapter.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralSuggestionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuggestionResponse'
          description: ''
  /api/library/chapters/{chapter_id}/general-suggestions/prompt/:
    post:
      operationId: library_chapters_general_suggestions_prompt_create
      description: Return the prompt used for block-agnostic suggestions.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralSuggestionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuggestionPromptResponse'
          description: ''
  /api/library/chapters/{chapter_id}/paragraph-suggestion/:
    post:
      operationId: library_chapters_paragraph_suggestion_create
      description: Return an AI-generated suggestion for a chapter paragraph.
      parameters:
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      tags:
      - library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParagraphSuggestionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParagraphSuggestionResponse'
          description: ''
  /api/library/chapters/{chapter_id}/paragraph-suggestion/prompt/:
    get:
      operationId: library_chapters_paragraph_suggestion_prompt_retrieve
      description: Return the raw prompt used for paragraph suggestions.
      parameters:
      - in: query
        name: blockId
        schema:
          type: string
        description: Identificador del bloque de párrafo para contextualizar el prompt.
      - in: path
        name: chapter_id
        schema:
          type: string
        required: true
      - in: query
        name: instructions
        schema:
          type: string
        description: Instrucciones personalizadas que se incluirán en el prompt.
      tags:
      - library
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParagraphSuggestionPromptResponse'
          description: ''
components:
  schemas:
    BlockConversionApply:
      type: object
      properties:
        anchorBlockId:
          type: string
        placement:
          allOf:
          - $ref: '#/components/schemas/PlacementEnum'
          default: append
    BlockConversionBlock:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BlockConversionBlockTypeEnum'
        text:
          type: string
        turns:
          type: array
          items:
            $ref: '#/components/schemas/BlockConversionTurn'
        context:
          type: string
      required:
      - type
    BlockConversionBlockTypeEnum:
      enum:
      - paragraph
      - dialogue
      type: string
      description: |-
        * `paragraph` - paragraph
        * `dialogue` - dialogue
    BlockConversionRequest:
      type: object
      properties:
        text:
          type: string
        instructions:
          type: string
        contextBlockId:
          type: string
      required:
      - text
    BlockConversionResponse:
      type: object
      properties:
        conversionId:
          type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockConversionBlock'
      required:
      - blocks
      - conversionId
    BlockConversionTurn:
      type: object
      properties:
        id:
          type: string
        speakerId:
          type: string
          nullable: true
        speakerName:
          type: string
          nullable: true
        utterance:
          type: string
        stageDirection:
          type: string
          nullable: true
      required:
      - utterance
    BookUpsert:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        synopsis:
          type: string
        order:
          type: integer
          minimum: 0
      required:
      - title
    ChapterBlock:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ChapterBlockTypeEnum'
        position:
          type: integer
        version:
          type: integer
          maximum: 999
          minimum: 1
          writeOnly: true
        activeVersion:
          type: integer
          readOnly: true
        versionCount:
          type: integer
          readOnly: true
        text:
          type: string
        style:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        turns:
          type: array
          items:
            $ref: '#/components/schemas/DialogueTurn'
        context:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        timestamp:
          type: string
          nullable: true
        mood:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        subtitle:
          type: string
          nullable: true
        ordinal:
          type: integer
          nullable: true
        epigraph:
          type: string
          nullable: true
        epigraphAttribution:
          type: string
          nullable: true
        povCharacterId:
          type: string
          nullable: true
        povCharacterName:
          type: string
          nullable: true
        timelineMarker:
          type: string
          nullable: true
        themeTags:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        lastUpdated:
          type: string
          nullable: true
        narrativeContext:
          allOf:
          - $ref: '#/components/schemas/NarrativeContext'
          nullable: true
        sceneDetails:
          allOf:
          - $ref: '#/components/schemas/SceneDetails'
          nullable: true
      required:
      - activeVersion
      - id
      - position
      - type
      - versionCount
    ChapterBlockCreate:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ChapterBlockTypeEnum'
        position:
          type: integer
        version:
          type: integer
          maximum: 999
          minimum: 1
          writeOnly: true
        activeVersion:
          type: integer
          readOnly: true
        versionCount:
          type: integer
          readOnly: true
        text:
          type: string
        style:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        turns:
          type: array
          items:
            $ref: '#/components/schemas/DialogueTurn'
        context:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        timestamp:
          type: string
          nullable: true
        mood:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        subtitle:
          type: string
          nullable: true
        ordinal:
          type: integer
          nullable: true
        epigraph:
          type: string
          nullable: true
        epigraphAttribution:
          type: string
          nullable: true
        povCharacterId:
          type: string
          nullable: true
        povCharacterName:
          type: string
          nullable: true
        timelineMarker:
          type: string
          nullable: true
        themeTags:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        lastUpdated:
          type: string
          nullable: true
        narrativeContext:
          allOf:
          - $ref: '#/components/schemas/NarrativeContext'
          nullable: true
        sceneDetails:
          allOf:
          - $ref: '#/components/schemas/SceneDetails'
          nullable: true
      required:
      - activeVersion
      - type
      - versionCount
    ChapterBlockTypeEnum:
      enum:
      - paragraph
      - dialogue
      - scene_boundary
      - metadata
      type: string
      description: |-
        * `paragraph` - paragraph
        * `dialogue` - dialogue
        * `scene_boundary` - scene_boundary
        * `metadata` - metadata
    ChapterBlockVersion:
      type: object
      properties:
        version:
          type: integer
        isActive:
          type: boolean
        payload: {}
      required:
      - isActive
      - payload
      - version
    ChapterBlockVersionList:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ChapterBlockVersion'
      required:
      - versions
    ChapterContextVisibilityUpdateItem:
      type: object
      properties:
        id:
          type: string
        sectionSlug:
          type: string
        visible:
          type: boolean
      required:
      - id
      - sectionSlug
      - visible
    ChapterDetail:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
        tokens:
          type: integer
          nullable: true
        wordCount:
          type: integer
          nullable: true
        content:
          type: string
        paragraphs:
          type: array
          items:
            type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ChapterBlock'
        bookId:
          type: string
          nullable: true
        bookTitle:
          type: string
          nullable: true
      required:
      - blocks
      - content
      - id
      - ordinal
      - paragraphs
      - title
    ChapterSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
        tokens:
          type: integer
          nullable: true
        wordCount:
          type: integer
          nullable: true
      required:
      - id
      - ordinal
      - title
    ChapterUpsert:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
          minimum: 0
        tokens:
          type: integer
          minimum: 0
          nullable: true
        wordCount:
          type: integer
          minimum: 0
          nullable: true
      required:
      - title
    ContextItem:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ContextItemTypeEnum'
        name:
          type: string
        role:
          type: string
        summary:
          type: string
        title:
          type: string
        description:
          type: string
        facts:
          type: string
        tokens:
          type: integer
        checked:
          type: boolean
        disabled:
          type: boolean
        chapterId:
          type: string
          nullable: true
        visibleForChapter:
          type: boolean
      required:
      - id
      - type
    ContextItemCreate:
      type: object
      properties:
        sectionSlug:
          type: string
        type:
          $ref: '#/components/schemas/ContextItemTypeEnum'
        id:
          type: string
        chapterId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        facts:
          type: string
          nullable: true
        tokens:
          type: integer
          nullable: true
        checked:
          type: boolean
        disabled:
          type: boolean
      required:
      - sectionSlug
      - type
    ContextItemTypeEnum:
      enum:
      - character
      - world
      - styleTone
      - chapter
      type: string
      description: |-
        * `character` - character
        * `world` - world
        * `styleTone` - styleTone
        * `chapter` - chapter
    ContextItemUpdate:
      type: object
      properties:
        id:
          type: string
        sectionSlug:
          type: string
        chapterId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        facts:
          type: string
          nullable: true
      required:
      - id
      - sectionSlug
    ContextSection:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        defaultOpen:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContextItem'
      required:
      - id
      - items
      - title
    DialogueTurn:
      type: object
      properties:
        id:
          type: string
        speakerId:
          type: string
          nullable: true
        speakerName:
          type: string
          nullable: true
        utterance:
          type: string
        stageDirection:
          type: string
          nullable: true
        tone:
          type: string
          nullable: true
      required:
      - id
      - utterance
    EditorState:
      type: object
      properties:
        content:
          type: string
        paragraphs:
          type: array
          items:
            type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ChapterBlock'
        tokens:
          type: integer
        cursor:
          type: integer
          nullable: true
        bookId:
          type: string
          nullable: true
        bookTitle:
          type: string
          nullable: true
        chapterId:
          type: string
          nullable: true
        chapterTitle:
          type: string
          nullable: true
      required:
      - blocks
      - content
      - paragraphs
      - tokens
    GeneralSuggestionPromptResponse:
      type: object
      properties:
        prompt:
          type: string
      required:
      - prompt
    GeneralSuggestionRequest:
      type: object
      properties:
        prompt:
          type: string
        placement:
          $ref: '#/components/schemas/PlacementEnum'
        anchorBlockId:
          type: string
        model:
          type: string
      required:
      - placement
      - prompt
    GeneralSuggestionResponse:
      type: object
      properties:
        model:
          type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockConversionBlock'
      required:
      - blocks
      - model
    LibraryBook:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
          nullable: true
        synopsis:
          type: string
          nullable: true
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/ChapterSummary'
      required:
      - chapters
      - id
      - title
    LibraryBooksResponse:
      type: object
      properties:
        books:
          type: array
          items:
            $ref: '#/components/schemas/LibraryBook'
      required:
      - books
    LibraryResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ContextSection'
      required:
      - sections
    NarrativeContext:
      type: object
      properties:
        povCharacterId:
          type: string
          nullable: true
        povCharacterName:
          type: string
          nullable: true
        timelineMarker:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        themeTags:
          type: array
          items:
            type: string
          nullable: true
    ParagraphSuggestionPromptResponse:
      type: object
      properties:
        prompt:
          type: string
      required:
      - prompt
    ParagraphSuggestionRequest:
      type: object
      properties:
        blockId:
          type: string
        instructions:
          type: string
    ParagraphSuggestionResponse:
      type: object
      properties:
        paragraphSuggestion:
          type: string
      required:
      - paragraphSuggestion
    PatchedBookUpsert:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        synopsis:
          type: string
        order:
          type: integer
          minimum: 0
    PatchedChapterBlockUpdate:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ChapterBlockTypeEnum'
        position:
          type: integer
        version:
          type: integer
          maximum: 999
          minimum: 1
          writeOnly: true
        activeVersion:
          type: integer
          readOnly: true
        versionCount:
          type: integer
          readOnly: true
        text:
          type: string
        style:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        turns:
          type: array
          items:
            $ref: '#/components/schemas/DialogueTurn'
        context:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        timestamp:
          type: string
          nullable: true
        mood:
          type: string
          nullable: true
        kind:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        subtitle:
          type: string
          nullable: true
        ordinal:
          type: integer
          nullable: true
        epigraph:
          type: string
          nullable: true
        epigraphAttribution:
          type: string
          nullable: true
        povCharacterId:
          type: string
          nullable: true
        povCharacterName:
          type: string
          nullable: true
        timelineMarker:
          type: string
          nullable: true
        themeTags:
          type: array
          items:
            type: string
        status:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        lastUpdated:
          type: string
          nullable: true
        narrativeContext:
          allOf:
          - $ref: '#/components/schemas/NarrativeContext'
          nullable: true
        sceneDetails:
          allOf:
          - $ref: '#/components/schemas/SceneDetails'
          nullable: true
    PatchedChapterContextVisibilityUpdateRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChapterContextVisibilityUpdateItem'
    PatchedChapterUpsert:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        ordinal:
          type: integer
          minimum: 0
        tokens:
          type: integer
          minimum: 0
          nullable: true
        wordCount:
          type: integer
          minimum: 0
          nullable: true
    PatchedContextItemsUpdateRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContextItemUpdate'
    PlacementEnum:
      enum:
      - before
      - after
      - append
      type: string
      description: |-
        * `before` - before
        * `after` - after
        * `append` - append
    SceneDetails:
      type: object
      properties:
        locationId:
          type: string
          nullable: true
        locationName:
          type: string
          nullable: true
        timestamp:
          type: string
          nullable: true
        mood:
          type: string
          nullable: true
