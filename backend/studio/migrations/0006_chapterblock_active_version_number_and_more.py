# Generated by Django 5.2.7 on 2025-10-15 04:27

import django.core.serializers.json
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


def bootstrap_block_versions(apps, schema_editor):
    chapter_block_model = apps.get_model("studio", "ChapterBlock")
    chapter_block_version_model = apps.get_model("studio", "ChapterBlockVersion")

    for block in chapter_block_model.objects.all().iterator():
        payload = dict(block.payload or {})
        version_obj = chapter_block_version_model.objects.create(
            block=block,
            version=1,
            payload=payload,
            is_active=True,
        )
        block.active_version = version_obj
        block.active_version_number = 1
        block.version_count = 1
        block.save(
            update_fields=[
                "active_version",
                "active_version_number",
                "version_count",
                "updated_at",
            ]
        )


class Migration(migrations.Migration):

    dependencies = [
        ("studio", "0005_chaptercontextvisibility"),
    ]

    operations = [
        migrations.AddField(
            model_name="chapterblock",
            name="active_version_number",
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name="chapterblock",
            name="version_count",
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.CreateModel(
            name="ChapterBlockVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "version",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ]
                    ),
                ),
                (
                    "payload",
                    models.JSONField(
                        default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="studio.chapterblock",
                    ),
                ),
            ],
            options={
                "ordering": ["block", "version"],
            },
        ),
        migrations.AddField(
            model_name="chapterblock",
            name="active_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="active_for_block",
                to="studio.chapterblockversion",
            ),
        ),
        migrations.AddConstraint(
            model_name="chapterblockversion",
            constraint=models.UniqueConstraint(
                fields=("block", "version"), name="uniq_block_version"
            ),
        ),
        migrations.RunPython(bootstrap_block_versions, migrations.RunPython.noop),
    ]
