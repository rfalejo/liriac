# Generated by Django 5.2.6 on 2025-09-17 03:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "last_opened",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
            ],
            options={
                "ordering": ["title", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="Persona",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("role", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True, default="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("order", models.PositiveIntegerField(db_index=True)),
                ("body", models.TextField(blank=True, default="")),
                (
                    "checksum",
                    models.CharField(
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid checksum", regex="^[0-9a-f]{64}$"
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="library.book",
                    ),
                ),
            ],
            options={
                "ordering": ["book_id", "order"],
            },
        ),
        migrations.CreateModel(
            name="ChapterVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField()),
                (
                    "checksum",
                    models.CharField(
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid checksum", regex="^[0-9a-f]{64}$"
                            )
                        ],
                    ),
                ),
                ("diff_size", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="library.chapter",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContextProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tokens_estimated", models.PositiveIntegerField(default=0)),
                ("token_limit", models.PositiveIntegerField(default=8000)),
                (
                    "chapter",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="context_profile",
                        to="library.chapter",
                    ),
                ),
                (
                    "included_chapters",
                    models.ManyToManyField(
                        blank=True,
                        related_name="context_in_profiles",
                        to="library.chapter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContextProfilePersona",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "context_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="persona_links",
                        to="library.contextprofile",
                    ),
                ),
                (
                    "persona",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_links",
                        to="library.persona",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="contextprofile",
            name="personas",
            field=models.ManyToManyField(
                blank=True,
                related_name="context_profiles",
                through="library.ContextProfilePersona",
                to="library.persona",
            ),
        ),
        migrations.AddIndex(
            model_name="chapter",
            index=models.Index(fields=["book", "order"], name="chapter_book_order_idx"),
        ),
        migrations.AddConstraint(
            model_name="chapter",
            constraint=models.UniqueConstraint(
                fields=("book", "order"), name="chapter_book_order_unique"
            ),
        ),
        migrations.AddIndex(
            model_name="chapterversion",
            index=models.Index(
                fields=["chapter", "created_at"], name="chapter_version_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="contextprofilepersona",
            constraint=models.UniqueConstraint(
                fields=("context_profile", "persona"), name="ctx_profile_persona_unique"
            ),
        ),
    ]
